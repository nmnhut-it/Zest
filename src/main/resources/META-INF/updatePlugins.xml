<?xml version="1.0" encoding="UTF-8"?>
<plugins>

    <plugin id="com.zps.Zest" url="https://zest-internal.zingplay.com/static/release/latest/Zest-latest.zip" version="1.9.893">
        <idea-version since-build="223.0" until-build="259.*"/>
        <name>Zest</name>
        <description><![CDATA[
            <h2>Zest: Smarter Java Development with AI</h2>
            <p><b>Zest</b> supercharges your IntelliJ workflow. Instantly generate JUnit tests, implement TODOs, and refactor for testability‚Äîall powered by AI.</p>
        ]]></description>
        <change-notes><![CDATA[
            <h3>Version 1.9.893 - Code Health Review Enhancement üîç</h3>
            <h4>üõ°Ô∏è Code Health Review Improvements</h4>
            <ul>
                <li><b>Enhanced Code Preview</b> - Fixed code preview issues in Code Health Review dialog</li>
                <li><b>Better LLM Prompts</b> - Improved prompts with Vietnamese mixed with English for better analysis accuracy</li>
                <li><b>Comprehensive Analysis</b> - Now includes originalCode and annotatedCode fields in all analysis types (Java methods, JS/TS regions, whole files)</li>
                <li><b>Debug Logging</b> - Added detailed debug information to track LLM response quality</li>
                <li><b>OOP Metrics System</b> - Migrated to clean object-oriented architecture using polymorphism instead of switch statements</li>
            </ul>
            
            <h4>üìä Metrics & Analytics</h4>
            <ul>
                <li><b>User Authentication</b> - Added actual username from ConfigurationManager to all metrics</li>
                <li><b>Strongly-Typed Data</b> - Replaced Map&lt;String, Any&gt; with strongly-typed CodeHealthAnalysisData</li>
                <li><b>Clean Architecture</b> - Removed deprecated code and wrapper methods for cleaner codebase</li>
                <li><b>Endpoint Strategy Pattern</b> - Implemented endpoint-specific request handling with MetricsEndpoint enum</li>
            </ul>
            
            <h4>üé® UI/UX Enhancements</h4>
            <ul>
                <li><b>Better Error Messages</b> - More informative debug information when code preview is unavailable</li>
                <li><b>Syntax Highlighting</b> - Enhanced code highlighting for LLM-generated review comments with severity indicators</li>
                <li><b>Debug Information</b> - Console output shows exactly what LLM returns for troubleshooting</li>
            </ul>
            
            <h4>üîß Technical Improvements</h4>
            <ul>
                <li><b>Removed Fallback Masking</b> - Better visibility into LLM response quality by removing automatic fallbacks</li>
                <li><b>Polymorphic Serialization</b> - Each metadata type handles its own JSON serialization via toJsonObject() method</li>
                <li><b>Type Safety</b> - Eliminated unsafe Map usage in favor of compile-time checked data classes</li>
                <li><b>Consistent Prompting</b> - All analysis types (Java, JS/TS, whole file, method group) now use consistent prompt structure</li>
            </ul>
            
            <p><em>Major architecture improvements for better maintainability and more accurate code analysis. üöÄ</em></p>
        ]]></change-notes>
        <vendor>Zingplay Game Studio</vendor>
    </plugin>

</plugins>